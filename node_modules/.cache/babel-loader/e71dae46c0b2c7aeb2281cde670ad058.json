{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      order: [],\n      total: 0,\n      subtotal: 0\n    };\n  },\n  mounted: function mounted() {\n    this.fetchOrders();\n  },\n  updated: function updated() {},\n  methods: {\n    fetchOrders: function fetchOrders() {\n      var _this = this;\n\n      fetch(\"http://localhost:3000/orders\").then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.order = data;\n\n        for (var i = 0; i < _this.order.length; i++) {\n          _this.total = _this.order[i].qty * _this.order[i].price;\n        }\n\n        console.log(_this.total);\n        console.log(_this.subtotal);\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\rheap\\Documents\\GitHub\\nandemokawaii.github.io\\src\\components\\Cards\\CardSummary.vue"],"names":[],"mappings":";AA4DA,eAAe;AACb,EAAA,IADa,kBACN;AACL,WAAO;AACL,MAAA,KAAK,EAAE,EADF;AAEL,MAAA,KAAK,EAAE,CAFF;AAGL,MAAA,QAAQ,EAAE;AAHL,KAAP;AAKD,GAPY;AAQb,EAAA,OARa,qBAQH;AACR,SAAK,WAAL;AACD,GAVY;AAWb,EAAA,OAXa,qBAWH,CAAE,CAXC;AAYb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACO;AAAA;;AACZ,MAAA,KAAK,CAAC,8BAAD,CAAL,CACG,IADH,CACQ,UAAC,GAAD;AAAA,eAAS,GAAG,CAAC,IAAJ,EAAT;AAAA,OADR,EAEG,IAFH,CAEQ,UAAC,IAAD,EAAU;AACd,QAAA,KAAI,CAAC,KAAL,GAAa,IAAb;;AAEA,aAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,KAAI,CAAC,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,UAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,CAAX,EAAc,GAAd,GAAoB,KAAI,CAAC,KAAL,CAAW,CAAX,EAAc,KAA/C;AACJ;;AACI,QAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,KAAjB;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,QAAjB;AACH,OAVL,EAYG,KAZH,CAYS,UAAC,GAAD;AAAA,eAAS,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,OAAhB,CAAT;AAAA,OAZT;AAaD;AAfM;AAZI,CAAf","sourcesContent":["<template>\n  <div\n    class=\"\n      relative\n      flex flex-col\n      break-words\n      bg-primary\n      w-full\n      mb-6\n      shadow-xl\n      rounded-lg\n    \"\n  >\n  <div v-if=\"order.length\">\n    <div class=\"text-center text-white mt-10\">\n      <h3\n        class=\"text-xl font-bold leading-normal mb-2 mb-2\"\n      >\n        ORDER SUMMARY\n      </h3>\n      <span class=\"text-sm\">There are a total of <b>{{order.length}}</b> item(s) in your cart.</span>\n    </div>\n    <section class=\"p-5 sm:p-2 text-white text-sm mb-5\">\n      <div class=\"py-1\">\n        <div class=\"flex flex-wrap justify-center\">\n          <div class=\"w-6/12 mt-3 px-2 flex-1 text-right uppercase\">\n            Subtotal:\n          </div>\n          <div class=\"w-6/12 px-2 mt-3 text-center\">₱ {{ parseFloat(total).toFixed(2) }}</div>\n        </div>\n      </div>\n      <div class=\"py-1\">\n        <div class=\"flex flex-wrap justify-center\">\n          <div class=\"w-6/12 mt-3 px-2 flex-1 text-right uppercase\">\n            Shipping Fee:\n          </div>\n          <div class=\"w-6/12 px-2 mt-3 text-center\">₱ 10.00</div>\n        </div>\n      </div>\n      <div class=\"py-1\">\n        <div class=\"flex flex-wrap justify-center\">\n          <div class=\"w-6/12 mt-3 px-2 flex-1 text-right uppercase\">\n            Discount:\n          </div>\n          <div class=\"w-6/12 px-2 mt-3 text-center\">₱ 10.00</div>\n        </div>\n      </div>\n      <div class=\"py-1\">\n        <div class=\"flex flex-wrap justify-center\">\n          <div class=\"w-6/12 mt-3 px-2 flex-1 text-right font-bold uppercase\">\n            Total Amount:\n          </div>\n          <div class=\"w-6/12 px-2 mt-3 font-bold text-center\">₱ 10.00</div>\n        </div>\n      </div>\n    </section>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      order: [],\n      total: 0,\n      subtotal: 0,\n    };\n  },\n  mounted() {\n    this.fetchOrders();\n  },\n  updated() {},\n  methods: {\n    fetchOrders() {\n      fetch(\"http://localhost:3000/orders\")\n        .then((res) => res.json())\n        .then((data) => {\n          this.order = data\n\n          for (var i = 0; i < this.order.length; i++) { \n              this.total = this.order[i].qty * this.order[i].price;\n          }\n              console.log(this.total)\n              console.log(this.subtotal)\n          })\n          \n        .catch((err) => console.log(err.message));\n    },\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}