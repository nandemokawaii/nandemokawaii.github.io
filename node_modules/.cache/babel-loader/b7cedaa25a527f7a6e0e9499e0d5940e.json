{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport CardShipping from \"@/components/Cards/CardShipping.vue\";\nimport CardSummary from \"@/components/Cards/CardSummary.vue\";\nexport default {\n  name: \"checkout-page\",\n  data: function data() {\n    return {\n      order: [],\n      total: 0,\n      discount: 0,\n      totalAmt: 0,\n      orderId: 0,\n      errors: [],\n      date: new Date(),\n      fullname: \"\",\n      handler: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      city: \"\",\n      postalCode: 0,\n      modeOfPayment: \"GCash\",\n      modeOfDelivery: \"Lalamove\",\n      notes: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.fetchOrders();\n  },\n  components: {\n    CardShipping: CardShipping,\n    CardSummary: CardSummary\n  },\n  methods: {\n    fetchOrders: function fetchOrders() {\n      var _this = this;\n\n      fetch(\"http://localhost:3000/cart\").then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.order = data;\n        _this.total = 0;\n        _this.discount = 0;\n        _this.totalAmt = 0;\n\n        for (var i = 0; i < _this.order.length; i++) {\n          _this.total += _this.order[i].qty * _this.order[i].price;\n\n          if (_this.order[i].category === \"photocards\") {\n            _this.discount += _this.order[i].qty * 5;\n          }\n        }\n\n        _this.totalAmt = _this.total - _this.discount;\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    },\n    checkForm: function checkForm(e) {\n      if (this.fullname && this.handler && this.email && this.phone && this.address && this.city && this.postalCode) {\n        this.placeOrder();\n      }\n\n      this.errors = [];\n\n      if (!this.fullname || !this.fullname.match(/\\w/)) {\n        this.errors.push({\n          'errorId': 'name',\n          'errorMsg': 'Name is required.'\n        });\n      }\n\n      if (!this.handler || !this.handler.match(/\\w/)) {\n        this.errors.push({\n          'errorId': 'handler',\n          'errorMsg': 'Twitter/Instagram handler is required.'\n        });\n      }\n\n      if (!this.email || !this.email.match(/\\w/)) {\n        this.errors.push({\n          'errorId': 'email',\n          'errorMsg': 'Email is required.'\n        });\n      }\n\n      if (!this.phone) {\n        this.errors.push({\n          'errorId': 'phone',\n          'errorMsg': 'Cellphone number is required.'\n        });\n      }\n\n      if (!this.address || !this.address.match(/\\w/)) {\n        this.errors.push({\n          'errorId': 'address',\n          'errorMsg': 'Full Address is required.'\n        });\n      }\n\n      if (!this.city || !this.city.match(/\\w/)) {\n        this.errors.push({\n          'errorId': 'city',\n          'errorMsg': 'City is required.'\n        });\n      }\n\n      if (!this.postalCode) {\n        this.errors.push({\n          'errorId': 'postalCode',\n          'errorMsg': 'Postal code is required.'\n        });\n      }\n\n      e.preventDefault();\n    },\n    saveData: function saveData(event) {\n      if (event.id === \"name\") {\n        this.fullname = event.value;\n        console.log(\"name: \" + this.fullname);\n      }\n\n      if (event.id === \"handler\") {\n        this.handler = event.value;\n        console.log(\"handler: \" + this.handler);\n      }\n\n      if (event.id === \"email\") {\n        this.email = event.value;\n        console.log(\"email: \" + this.email);\n      }\n\n      if (event.id === \"phone\") {\n        this.phone = event.value;\n        console.log(\"phone: \" + this.phone);\n      }\n\n      if (event.id === \"address\") {\n        this.address = event.value;\n        console.log(\"address: \" + this.address);\n      }\n\n      if (event.id === \"city\") {\n        this.city = event.value;\n        console.log(\"city: \" + this.city);\n      }\n\n      if (event.id === \"postalCode\") {\n        this.postalCode = event.value;\n        console.log(\"postalCode: \" + this.postalCode);\n      }\n\n      if (event.id === \"notes\") {\n        this.notes = event.value;\n        console.log(\"notes: \" + this.notes);\n      }\n\n      if (event.id === \"modeOfPayment\") {\n        this.modeOfPayment = event.value;\n        console.log(\"modeOfPayment: \" + this.modeOfPayment);\n      }\n\n      if (event.id === \"modeOfDelivery\") {\n        this.modeOfDelivery = event.value;\n        console.log(\"modeOfDelivery: \" + this.modeOfDelivery);\n      }\n    },\n    getErrMsg: function getErrMsg(a) {\n      if (!this.errors.length == 0) {\n        var errList = this.errors.find(function (error) {\n          return error.errorId === a;\n        });\n        return errList;\n      }\n    },\n    placeOrder: function placeOrder() {\n      this.orderId = (this.date.getFullYear() + \"\" + this.date.getMonth() + \"\" + this.date.getDate() + \"\" + this.date.getHours() + \"\" + this.date.getMinutes() + \"\" + this.date.getSeconds()).toString();\n      this.fetchOrders();\n      fetch(' http://localhost:3000/order', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: this.id,\n          orderId: this.orderId,\n          itemId: this.order.id,\n          itemTitle: this.order.title,\n          itemQty: this.order.quantity,\n          itemPrice: this.order.price,\n          subtotal: this.total,\n          discount: this.discount,\n          totalAmt: this.totalAmt,\n          fullname: this.fullname,\n          handler: this.handler,\n          email: this.email,\n          phone: this.phone,\n          address: this.address,\n          city: this.city,\n          postalCode: this.postalCode,\n          modeOfPayment: this.modeOfPayment,\n          modeOfDelivery: this.modeOfDelivery,\n          notes: this.notes\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return console.log(json);\n      }).catch(function (err) {\n        return console.log(err.message);\n      }); // fetch(\"http://localhost:3000/order\", {\n      //   method: 'POST',\n      //   body: JSON.stringify({\n      //     orderID: this.orderID,\n      //     fullname: \"\",\n      //     handler: \"\",\n      //     email: \"\",\n      //     phone: \"\",\n      //     address: \"\",\n      //     city: \"\",\n      //     postalCode: 0,\n      //     modeOfPayment: \"GCash\",\n      //     modeOfDelivery: \"Lalamove\",\n      //     notes: \"\",\n      //     title: this.product.title,\n      //     qty: this.quantity,\n      //     price: this.price,\n      //     src: this.product.img,\n      //     id: this.id,\n      //     total: this.total,\n      //     discount: this.discount,\n      //     totalAmt: this.totalAmt,\n      //   }),\n      //   headers: {\n      //     \"Content-type\": \"application/json; charset=UTF-8\",\n      //   },\n      // })\n      //   .then((response) => response.json())\n      //   .then((json) => console.log(json))\n      //   .catch((err) => console.log(err.message));\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\rheap\\Documents\\GitHub\\nandemokawaii.github.io\\src\\views\\Checkout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"flex flex-wrap container mx-auto\">\r\n    <div class=\"w-full lg:w-9/12 px-4\">\r\n      <CardShipping \r\n        @inputChanged=\"saveData\"\r\n        v-bind:errors=\"errors\"\r\n        v-bind:getErrMsg=\"getErrMsg\"\r\n      />\r\n    </div>\r\n    <div class=\"w-full lg:w-3/12 px-4 z-30\">\r\n      <CardSummary\r\n        v-bind:order=\"order\"\r\n        v-bind:total=\"total\"\r\n        v-bind:discount=\"discount\"\r\n        v-bind:totalAmt=\"totalAmt\"\r\n      />\r\n      <div class=\"\">\r\n        <router-link\r\n          v-if=\"order.length\"\r\n          class=\"\r\n            flex\r\n            w-full\r\n            justify-center\r\n            bg-red-600\r\n            active:bg-red-100\r\n            uppercase\r\n            text-white\r\n            font-bold\r\n            hover:shadow-md\r\n            shadow\r\n            text-md\r\n            px-4\r\n            py-2\r\n            rounded\r\n            outline-none\r\n            focus:outline-none\r\n            mx-auto\r\n            ease-linear\r\n            transition-all\r\n            duration-150\r\n          \"\r\n          :to=\"{ name: 'checkoutComplete' }\"\r\n          v-on:click=\"checkForm\"\r\n        >\r\n          Place Order\r\n        </router-link>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport CardShipping from \"@/components/Cards/CardShipping.vue\";\r\nimport CardSummary from \"@/components/Cards/CardSummary.vue\";\r\n\r\nexport default {\r\n  name: \"checkout-page\",\r\n  data() {\r\n    return {\r\n      order: [],\r\n      total: 0,\r\n      discount: 0,\r\n      totalAmt: 0,\r\n      orderId: 0,\r\n      errors: [],\r\n      date: new Date(),\r\n      fullname: \"\",\r\n      handler: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      postalCode: 0,\r\n      modeOfPayment: \"GCash\",\r\n      modeOfDelivery: \"Lalamove\",\r\n      notes: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  },\r\n  components: {\r\n    CardShipping,\r\n    CardSummary,\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      fetch(\"http://localhost:3000/cart\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.order = data;\r\n          this.total = 0;\r\n          this.discount = 0;\r\n          this.totalAmt = 0;\r\n\r\n          for (var i = 0; i < this.order.length; i++) {\r\n            this.total += this.order[i].qty * this.order[i].price;\r\n\r\n            if (this.order[i].category === \"photocards\") {\r\n              this.discount += this.order[i].qty * 5;\r\n            }\r\n          }\r\n\r\n          this.totalAmt = this.total - this.discount;\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n    },\r\n    checkForm: function (e) {\r\n      if (this.fullname && this.handler && this.email && this.phone && this.address && this.city && this.postalCode) {\r\n        this.placeOrder();\r\n      }\r\n\r\n      this.errors = [];\r\n\r\n      if (!this.fullname || !this.fullname.match(/\\w/)) {\r\n        this.errors.push({'errorId':'name','errorMsg':'Name is required.'});\r\n      }\r\n      if (!this.handler || !this.handler.match(/\\w/)) {\r\n        this.errors.push({'errorId':'handler','errorMsg':'Twitter/Instagram handler is required.'});\r\n      }\r\n      if (!this.email || !this.email.match(/\\w/)) {\r\n        this.errors.push({'errorId':'email','errorMsg':'Email is required.'});\r\n      }\r\n      if (!this.phone) {\r\n        this.errors.push({'errorId':'phone','errorMsg':'Cellphone number is required.'});\r\n      }\r\n      if (!this.address || !this.address.match(/\\w/)) {\r\n        this.errors.push({'errorId':'address','errorMsg':'Full Address is required.'});\r\n      }\r\n      if (!this.city || !this.city.match(/\\w/)) {\r\n        this.errors.push({'errorId':'city','errorMsg':'City is required.'});\r\n      }\r\n      if (!this.postalCode) {\r\n        this.errors.push({'errorId':'postalCode','errorMsg':'Postal code is required.'});\r\n      }\r\n      e.preventDefault();\r\n    },\r\n    saveData(event){\r\n      if(event.id === \"name\"){\r\n        this.fullname = event.value\r\n        console.log(\"name: \" + this.fullname)\r\n      }\r\n      if(event.id === \"handler\"){\r\n        this.handler = event.value\r\n        console.log(\"handler: \"+this.handler)\r\n      }\r\n      if(event.id === \"email\"){\r\n        this.email = event.value\r\n        console.log(\"email: \"+this.email)\r\n      }\r\n      if(event.id === \"phone\"){\r\n        this.phone = event.value\r\n        console.log(\"phone: \"+this.phone)\r\n      }\r\n      if(event.id === \"address\"){\r\n        this.address = event.value\r\n        console.log(\"address: \"+this.address)\r\n      }\r\n      if(event.id === \"city\"){\r\n        this.city = event.value\r\n        console.log(\"city: \"+this.city)\r\n      }\r\n      if(event.id === \"postalCode\"){\r\n        this.postalCode = event.value\r\n        console.log(\"postalCode: \"+this.postalCode)\r\n      }\r\n      if(event.id === \"notes\"){\r\n        this.notes = event.value\r\n        console.log(\"notes: \"+this.notes)\r\n      }\r\n      if(event.id === \"modeOfPayment\"){\r\n        this.modeOfPayment = event.value\r\n        console.log(\"modeOfPayment: \"+this.modeOfPayment)\r\n      }\r\n      if(event.id === \"modeOfDelivery\"){\r\n        this.modeOfDelivery = event.value\r\n        console.log(\"modeOfDelivery: \"+this.modeOfDelivery)\r\n      }\r\n    },\r\n    getErrMsg(a) {\r\n        if(!this.errors.length == 0)\r\n        {\r\n          var errList = this.errors.find((error) => error.errorId === a);\r\n          return errList\r\n        }        \r\n    },\r\n    placeOrder: function() {\r\n      this.orderId = (this.date.getFullYear()+\"\"+this.date.getMonth()+\"\"+this.date.getDate()+\"\"+this.date.getHours()+\"\"+this.date.getMinutes()+\"\"+this.date.getSeconds()).toString();\r\n\r\n      this.fetchOrders();\r\n\r\n      fetch(' http://localhost:3000/order', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id: this.id,\r\n          orderId: this.orderId,\r\n          itemId: this.order.id,\r\n          itemTitle: this.order.title,\r\n          itemQty: this.order.quantity,\r\n          itemPrice: this.order.price,\r\n          subtotal: this.total,\r\n          discount: this.discount,\r\n          totalAmt: this.totalAmt,\r\n          fullname: this.fullname,\r\n          handler: this.handler,\r\n          email: this.email,\r\n          phone: this.phone,\r\n          address: this.address,\r\n          city: this.city,\r\n          postalCode: this.postalCode,\r\n          modeOfPayment: this.modeOfPayment,\r\n          modeOfDelivery: this.modeOfDelivery,\r\n          notes: this.notes,\r\n          \r\n        }),\r\n        \r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => console.log(json))\r\n        .catch((err) => console.log(err.message));\r\n\r\n      // fetch(\"http://localhost:3000/order\", {\r\n      //   method: 'POST',\r\n      //   body: JSON.stringify({\r\n      //     orderID: this.orderID,\r\n      //     fullname: \"\",\r\n      //     handler: \"\",\r\n      //     email: \"\",\r\n      //     phone: \"\",\r\n      //     address: \"\",\r\n      //     city: \"\",\r\n      //     postalCode: 0,\r\n      //     modeOfPayment: \"GCash\",\r\n      //     modeOfDelivery: \"Lalamove\",\r\n      //     notes: \"\",\r\n      //     title: this.product.title,\r\n      //     qty: this.quantity,\r\n      //     price: this.price,\r\n      //     src: this.product.img,\r\n      //     id: this.id,\r\n      //     total: this.total,\r\n      //     discount: this.discount,\r\n      //     totalAmt: this.totalAmt,\r\n      //   }),\r\n\r\n      //   headers: {\r\n      //     \"Content-type\": \"application/json; charset=UTF-8\",\r\n      //   },\r\n      // })\r\n      //   .then((response) => response.json())\r\n      //   .then((json) => console.log(json))\r\n      //   .catch((err) => console.log(err.message));\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}