{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/rheap/Documents/GitHub/nandemokawaii.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { ref } from 'vue';\n\nvar getItems = function getItems(a) {\n  var items = ref([]);\n  var error = ref(null);\n  var url = ref(null);\n\n  var load = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (a != null) {\n                url = 'http://localhost:3000/items';\n              } else {\n                url = 'http://localhost:3000/items?category=' + a;\n              }\n\n              console.log(url);\n              _context.next = 5;\n              return fetch(url);\n\n            case 5:\n              data = _context.sent;\n\n              if (data.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error('no data available');\n\n            case 8:\n              _context.next = 10;\n              return data.json();\n\n            case 10:\n              items.value = _context.sent;\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              error.value = _context.t0.message;\n              console.log(error.value);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function load() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  load();\n  return {\n    items: items,\n    error: error,\n    load: load\n  };\n};\n\nexport default getItems;","map":{"version":3,"sources":["C:/Users/rheap/Documents/GitHub/nandemokawaii.github.io/src/composables/getItems.js"],"names":["ref","getItems","a","items","error","url","load","console","log","fetch","data","ok","Error","json","value","message"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,KAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACpB,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAD,CAAjB;AACA,MAAMI,KAAK,GAAGJ,GAAG,CAAC,IAAD,CAAjB;AACA,MAAIK,GAAG,GAAGL,GAAG,CAAC,IAAD,CAAb;;AAEA,MAAMM,IAAI;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEL,kBAAGJ,CAAC,IAAG,IAAP,EAAY;AACRG,gBAAAA,GAAG,GAAG,6BAAN;AACH,eAFD,MAGI;AACAA,gBAAAA,GAAG,GAAG,0CAA0CH,CAAhD;AACH;;AACDK,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AARK;AAAA,qBASYI,KAAK,CAACJ,GAAD,CATjB;;AAAA;AASDK,cAAAA,IATC;;AAAA,kBAUDA,IAAI,CAACC,EAVJ;AAAA;AAAA;AAAA;;AAAA,oBAWKC,KAAK,CAAC,mBAAD,CAXV;;AAAA;AAAA;AAAA,qBAaeF,IAAI,CAACG,IAAL,EAbf;;AAAA;AAaLV,cAAAA,KAAK,CAACW,KAbD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBLV,cAAAA,KAAK,CAACU,KAAN,GAAc,YAAIC,OAAlB;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACU,KAAlB;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJR,IAAI;AAAA;AAAA;AAAA,KAAV;;AAqBAA,EAAAA,IAAI;AAEJ,SAAO;AAAEH,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,KAAK,EAALA,KAAT;AAAgBE,IAAAA,IAAI,EAAJA;AAAhB,GAAP;AACH,CA7BD;;AA+BA,eAAeL,QAAf","sourcesContent":["import { ref } from 'vue'\r\n\r\nconst getItems = (a) => {\r\n    const items = ref([])\r\n    const error = ref(null)\r\n    let url = ref(null)\r\n\r\n    const load = async () => {\r\n        try{\r\n            if(a !=null){\r\n                url = 'http://localhost:3000/items';\r\n            }\r\n            else{\r\n                url = 'http://localhost:3000/items?category=' + a\r\n            }\r\n            console.log(url);\r\n            let data = await fetch(url)\r\n            if(!data.ok){\r\n                throw Error('no data available')\r\n            }\r\n            items.value = await data.json()  \r\n        }\r\n        catch(err) {\r\n            error.value = err.message\r\n            console.log(error.value);\r\n        }\r\n    }\r\n\r\n    load()\r\n\r\n    return { items, error, load }\r\n}\r\n\r\nexport default getItems"]},"metadata":{},"sourceType":"module"}