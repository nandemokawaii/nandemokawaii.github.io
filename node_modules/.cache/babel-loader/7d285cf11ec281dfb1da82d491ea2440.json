{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport Spinner from \"@/components/Spinners/Spinner.vue\";\nexport default {\n  data: function data() {\n    return {\n      order: []\n    };\n  },\n  mounted: function mounted() {\n    this.fetchOrders();\n  },\n  updated: function updated() {},\n  methods: {\n    fetchOrders: function fetchOrders() {\n      var _this = this;\n\n      fetch(\"http://localhost:3000/orders\").then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this.order = data;\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    },\n    removeItem: function removeItem(id) {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/orders/\" + id, {\n        method: \"DELETE\"\n      }).then(function (response) {\n        _this2.fetchOrders();\n\n        return response;\n      });\n    }\n  },\n  components: {\n    Spinner: Spinner\n  },\n  props: {\n    color: {\n      default: \"light\",\n      validator: function validator(value) {\n        // The value must match one of these strings\n        return [\"light\", \"dark\"].indexOf(value) !== -1;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\rheap\\Documents\\GitHub\\nandemokawaii.github.io\\src\\components\\Cards\\CardCartList.vue"],"names":[],"mappings":";AA4FA,OAAO,OAAP,MAAoB,mCAApB;AAEA,eAAe;AACb,EAAA,IADa,kBACN;AACL,WAAO;AACL,MAAA,KAAK,EAAE;AADF,KAAP;AAGD,GALY;AAMb,EAAA,OANa,qBAMH;AACR,SAAK,WAAL;AACD,GARY;AASb,EAAA,OATa,qBASH,CAAE,CATC;AAUb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACO;AAAA;;AACZ,MAAA,KAAK,CAAC,8BAAD,CAAL,CACG,IADH,CACQ,UAAC,GAAD;AAAA,eAAS,GAAG,CAAC,IAAJ,EAAT;AAAA,OADR,EAEG,IAFH,CAEQ,UAAC,IAAD;AAAA,eAAW,KAAI,CAAC,KAAL,GAAa,IAAxB;AAAA,OAFR,EAGG,KAHH,CAGS,UAAC,GAAD;AAAA,eAAS,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,OAAhB,CAAT;AAAA,OAHT;AAID,KANM;AAOP,IAAA,UAAU,EAAE,oBAAU,EAAV,EAAc;AAAA;;AACxB,MAAA,KAAK,CAAC,kCAAkC,EAAnC,EAAuC;AAC1C,QAAA,MAAM,EAAE;AADkC,OAAvC,CAAL,CAEG,IAFH,CAEQ,UAAC,QAAD,EAAc;AACpB,QAAA,MAAI,CAAC,WAAL;;AACA,eAAO,QAAP;AACD,OALD;AAMD;AAdM,GAVI;AA0Bb,EAAA,UAAU,EAAE;AACV,IAAA,OAAO,EAAP;AADU,GA1BC;AA6Bb,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AACL,MAAA,OAAO,EAAE,OADJ;AAEL,MAAA,SAAS,EAAE,mBAAU,KAAV,EAAiB;AAC1B;AACA,eAAO,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,CAA0B,KAA1B,MAAqC,CAAC,CAA7C;AACD;AALI;AADF;AA7BM,CAAf","sourcesContent":["<template>\n  <div\n    class=\"\n      relative\n      flex flex-col\n      min-w-0\n      break-words\n      w-full\n      mb-6\n      shadow-lg\n      rounded\n    \"\n    :class=\"[color === 'light' ? 'bg-white' : 'bg-emerald-900 text-white']\"\n  >\n    <div class=\"rounded-t mb-0 px-4 py-3 border-0\">\n      <div class=\"flex flex-wrap items-center\">\n        <div class=\"relative w-full px-4 max-w-full flex-grow flex-1\">\n          <h3\n            class=\"font-semibold text-2xl\"\n            :class=\"[color === 'light' ? 'text-primary' : 'text-white']\"\n          >\n            My Cart\n          </h3>\n        </div>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"flex flex-wrap\">\n        <div class=\"w-10/12 md:w-11/12 flex-1 text-center\">\n          <div class=\"flex flex-wrap text-sm md:mt-3\">\n            <div class=\"w-full md:w-6/12\">Description</div>\n            <div class=\"w-full md:w-2/12 text-sm\">Quantity</div>\n            <div class=\"w-full md:w-2/12 text-sm\">Unit Price</div>\n            <div class=\"w-full md:w-2/12 text-sm\">Subtotal</div>\n          </div>\n        </div>\n        <div class=\"px-4 text-right mt-3\">Action</div>\n      </div>\n      <div v-if=\"order.length\">\n        <div v-for=\"order in order\" :key=\"order.id\">\n          <div class=\"py-5 flex flex-wrap text-slate-600\">\n            <div class=\"w-full px-2\">\n              <div class=\"flex flex-wrap\">\n                <div class=\"px-4\">\n                  <img\n                    :src=\"[order.src]\"\n                    class=\"mx-auto h-12 w-12 bg-white rounded-full border\"\n                    alt=\"...\"\n                  />\n                </div>\n                <div class=\"w-10/12 md:w-11/12 flex-1\">\n                  <div class=\"flex flex-wrap text-sm md:mt-3\">\n                    <div class=\"w-full md:w-6/12\">{{ order.title }}</div>\n                    <div class=\"w-full md:w-2/12 text-sm\">x {{ order.qty }}</div>\n                    <div class=\"w-full md:w-2/12 text-sm\">{{ parseFloat(order.price).toFixed(2) }}</div>\n                    <div class=\"w-full md:w-2/12 text-sm\">{{ parseFloat(order.qty*order.price).toFixed(2) }}</div>\n                  </div>\n                </div>\n                <div class=\"px-4 text-right\">\n                  <button\n                    class=\"\n                      hover:text-red-100\n                      text-red-600\n                      px-3\n                      py-2\n                      items-center\n                      text-sm\n                      uppercase\n                      font-bold\n                      outline-none\n                      focus:outline-none\n                    \"\n                    v-on:click=\"removeItem(order.id)\"\n                  >\n                    <i class=\"text-red fas fa-minus-circle\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"order.length == 0\">\n        <p class=\"text-center mb-5\">There are no items in your cart.</p> \n      </div>\n      <div v-else>\n        <Spinner />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Spinner from \"@/components/Spinners/Spinner.vue\";\n\nexport default {\n  data() {\n    return {\n      order: [],\n    };\n  },\n  mounted() {\n    this.fetchOrders();\n  },\n  updated() {},\n  methods: {\n    fetchOrders() {\n      fetch(\"http://localhost:3000/orders\")\n        .then((res) => res.json())\n        .then((data) => (this.order = data))\n        .catch((err) => console.log(err.message));\n    },\n    removeItem: function (id) {\n      fetch(\"http://localhost:3000/orders/\" + id, {\n        method: \"DELETE\",\n      }).then((response) => {\n        this.fetchOrders();\n        return response;\n      });\n    },\n  },\n  components: {\n    Spinner,\n  },\n  props: {\n    color: {\n      default: \"light\",\n      validator: function (value) {\n        // The value must match one of these strings\n        return [\"light\", \"dark\"].indexOf(value) !== -1;\n      },\n    },\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}